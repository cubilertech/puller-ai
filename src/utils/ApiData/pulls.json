[
  {
    "query": "Could you get the top 10 performing SKUs by region for the last quarter?",
    "description": "This query looks at the Sales by Region for [ Brand ] and filters for sales in the last quarter and groups by region and SKU. It then calculates the total revenue, total units sold, and average profit margin for each SKU within each region. Finally it orders the results by total revenue in descending order and returns only the top 10 SKUs.",
    "id": "query#1234567890",
    "sql": "SELECT TOP 10 r.region, s.sku, SUM(s.revenue) AS total_revenue, SUM(s.units_sold) AS total_units_sold, AVG(s.profit_margin) AS avg_profit_margin FROM sales s JOIN region r ON s.region_id = r.id WHERE s.sale_date >= DATEADD(quarter, -1, GETDATE()) GROUP BY r.region, s.sku ORDER BY total_revenue DESC;",
    "target": "",
    "graph": [],
    "variables": [],
    "observations": "In the last quarter, the top 10 SKUs for [Brand] generated a combined total revenue of $2.5 million, with the highest contributions from the North and West regions, accounting for $1.2 million and $900,000 respectively. These SKUs achieved significant sales volumes, with the top SKU selling 15,000 units, and maintained an average profit margin of 25%, suggesting both high demand and profitability.",
    "notes": [
      "Broad Sales Overview: The data covers last quarter sales for all SKUs across multiple regions, providing a broad view of performance. Analyzing monthly sales trends could reveal important seasonal patterns.",
      "Demographic Insights: Investigating customer demographics could help identify key buyer segments and improve targeted marketing. This demographic analysis can be particularly useful for tailoring regional strategies.",
      "Impact of Marketing: Evaluating regional marketing efforts could provide insights into their impact on sales. For example, a 15% sales increase in the West region coincided with a recent ad campaign.",
      "Quarterly Growth Analysis: Comparing current performance with previous quarters can help identify growth trends. Sales grew by 10% compared to the previous quarter, highlighting consistent growth.",
      "Inventory Turnover Insights: Exploring inventory turnover rates alongside sales data can provide a fuller picture of SKU performance. High turnover rates might indicate strong demand and efficient inventory management"
    ],
    "columns": [
      "Region",
      "Product",
      "Revenue",
      "Units Sold",
      "Profit Margin"
    ],
    "rows": [
      {
        "Region": "North",
        "Product": "Product A",
        "Revenue": "$50,000",
        "Units Sold": 500,
        "Profit Margin": "25%"
      },
      {
        "Region": "North",
        "Product": "Product B",
        "Revenue": "$30,000",
        "Units Sold": 300,
        "Profit Margin": "20%"
      }
    ],
    "results": [
      {
        "bytes": 3778,
        "database": "helical-math-378821",
        "duration": 3.0252435207366943,
        "message": "CREATE TABLE (29.0 rows, 3.7 KiB processed)",
        "rows": 29,
        "schema": "shop",
        "table": "loyalty",
        "url": "https://console.cloud.google.com/bigquery?p=helical-math-378821&d=shop&t=loyalty"
      }
    ]
  },
  {
    "query": "I’d like a table that shows me the average order value of our products compared to the average order value of the rest of category each quarter for the last 4 quarters.",
    "description": "This query first calculates the total order value and number of orders for each product from the Sales DB and for the category (minus our products) from the Category DB for each quarter, using sales database. It then calculates the average order value for our products and the rest of category for each quarter, and returns the results for the most recent 4 quarters.",
    "id": "query#1234567891",
    "sql": "WITH product_sales AS ( SELECT EXTRACT(QUARTER FROM sale_date) AS sale_quarter, EXTRACT(YEAR FROM sale_date) AS sale_year, product_id, SUM(order_value) AS total_order_value, COUNT(DISTINCT order_id) AS num_orders FROM sales_data WHERE product_id IN (SELECT product_id FROM product_db WHERE brand = 'our_brand') GROUP BY EXTRACT(QUARTER FROM sale_date), EXTRACT(YEAR FROM sale_date), product_id ), category_sales AS ( SELECT EXTRACT(QUARTER FROM sale_date) AS sale_quarter, EXTRACT(YEAR FROM sale_date) AS sale_year, category_id, SUM(order_value) AS total_order_value, COUNT(DISTINCT order_id) AS num_orders FROM sales_data WHERE product_id NOT IN (SELECT product_id FROM product_db WHERE brand = 'our_brand') AND category_id IN (SELECT category_id FROM product_db WHERE brand = 'our_brand') GROUP BY EXTRACT(QUARTER FROM sale_date), EXTRACT(YEAR FROM sale_date), category_id ) SELECT p.sale_quarter, p.sale_year, AVG(p.total_order_value / p.num_orders) AS avg_order_value, AVG(c.total_order_value / c.num_orders) AS avg_category_order_value FROM product_sales p JOIN category_sales c ON p.sale_quarter = c.sale_quarter AND p.sale_year = c.sale_year WHERE p.sale_quarter IN ( SELECT EXTRACT(QUARTER FROM sale_date) FROM sales_data WHERE EXTRACT(YEAR FROM sale_date) = EXTRACT(YEAR FROM CURRENT_DATE) ORDER BY sale_date DESC LIMIT 4 ) GROUP BY p.sale_quarter, p.sale_year ORDER BY p.sale_quarter DESC;",
    "target": "",
    "graph": [
      {
        "depends": [],
        "description": "table of sales data",
        "id": "model.dbt_tutorial.sales",
        "name": "sales"
      },
      {
        "depends": [],
        "description": "table of orders data",
        "id": "model.dbt_tutorial.orders",
        "name": "orders"
      },
      {
        "depends": [
          "model.dbt_tutorial.sales",
          "model.dbt_tutorial.orders"
        ],
        "description": "the results for the most recent N quarters",
        "id": "model.dbt_tutorial.quarter",
        "name": "quarter"
      },
      {
        "depends": [
          "model.dbt_tutorial.quarter"
        ],
        "description": "table of products data",
        "id": "model.dbt_tutorial.products",
        "name": "products"
      }
    ],
    "variables": [
      {
        "id": "quarter_order_thresh",
        "model": "model.dbt_tutorial.quarter",
        "name": "quarter_order_thresh",
        "type": "numeric",
        "value": 4
      }
    ],
    "observations": "In the most recent four quarters, our products generated a total revenue of $10 million across all regions, with an average order value of $300. Comparatively, the rest of the category contributed $20 million in revenue with an average order value of $200.",
    "notes": [
      "Quarterly Revenue Trends: Analyzing quarterly revenue trends can help identify seasonal patterns or fluctuations in consumer demand.",
      "Profit Margin Analysis: Calculate the average profit margin for our products and compare it with the category average to assess profitability.",
      "Geographical Performance: Assess sales performance by region, calculating the percentage increase in revenue by region compared to the previous quarter. We’re seeing up to 20% increases in certain regions which is greater than what we’d expect this year.",
      "Promotional Impact: Evaluate the ROI for recent promotional activities by calculating the percentage increase in revenue attributed to promotions. The average promotional lift for this time period is 15%, which is 1.5% less than previous year.",
      "Customer Segmentation: Segment customers based on purchasing behavior to target marketing efforts effectively using Puller AI’s advanced analytics module."
    ],
    "columns": [],
    "rows": [],
    "status": "complete",
    "results": [
      {
        "bytes": 3778,
        "database": "helical-math-378821",
        "duration": 3.0252435207366943,
        "message": "CREATE TABLE (29.0 rows, 3.7 KiB processed)",
        "rows": 29,
        "schema": "shop",
        "table": "loyalty",
        "url": "https://console.cloud.google.com/bigquery?p=helical-math-378821&d=shop&t=loyalty"
      }
    ]
  },
  {
    "query": "Can you retrieve a list of products with current inventory levels below the threshold for reorder, as well as the last date inventory levels were at or above threshold. Include the reorder quantity as well.",
    "description": "This query joins the Products table with the Goods table on the ProdID field, and filters for products where the current stock level is below the reorder level. It then calculates the last date the inventory levels were at or above the threshold using a conditional aggregate function. Finally, it includes the reorder level and the current stock level in the result set. \nNote that the Goods table is a table that stores the stock in and out for each product, with separate fields for the quantity and the date. The Stock field is calculated as the difference between the In and Out fields, and the ReorderLevel field is a threshold value that triggers a reorder when the stock level falls below it.",
    "id": "query#1234567892",
    "sql": "SELECT Products.ID, Products.Product, Products.Description, Products.Price, Products.Category, Products.Supplier, Goods.Stock, Goods.ReorderLevel, MAX(CASE WHEN Goods.Stock >= Products.ReorderLevel THEN Goods.Date END) AS LastDateAboveThreshold FROM Products INNER JOIN Goods ON Products.ID = Goods.ProdID WHERE Goods.Stock < Products.ReorderLevel GROUP BY Products.ID, Products.Product, Products.Description, Products.Price, Products.Category, Products.Supplier, Goods.Stock, Goods.ReorderLevel;",
    "target": "",
    "graph": [],
    "variables": [],
    "observations": "This query identifies 50 products with current stock levels below the reorder threshold. The last date inventory levels were at or above the threshold was two weeks ago on average. Reorder levels range from 100 to 500 units, while current stock levels range from 20 to 450 units.",
    "notes": [
      "Data Context: The Goods table facilitates accurate inventory management by tracking stock in and out for each product.",
      "Replenishment Efficiency: Average time taken to replenish stock levels after reaching the threshold provides insights into inventory management efficiency (averaging 14 days).",
      "Inventory Variation: Notable differences exist in reorder and current stock levels among products, with reorder levels ranging from 100 to 500 units and current stock levels ranging from 20 to 450 units.",
      "Irregular Replenishments: Some products may experience sporadic or irregular stock replenishments, possibly due to supplier constraints or seasonal demand fluctuations.",
      "Optimization Opportunities: With an average of 50 products requiring reordering each week, it's evident that inventory management strategies need refinement to minimize stockouts and ensure optimal inventory levels."
    ],
    "columns": [
      "Product",
      "Current Stock",
      "Reorder Level",
      "Reorder Quantity",
      "Last in Stock Date"
    ],
    "rows": [],
    "status": "complete",
    "results": [
      {
        "bytes": 3778,
        "database": "helical-math-378821",
        "duration": 3.0252435207366943,
        "message": "CREATE TABLE (29.0 rows, 3.7 KiB processed)",
        "rows": 29,
        "schema": "shop",
        "table": "loyalty",
        "url": "https://console.cloud.google.com/bigquery?p=helical-math-378821&d=shop&t=loyalty"
      }
    ]
  },
  {
    "query": "Show me the daily unit and dollar sales volume in all stores in region X for any product that has Star Technology for the last week. Compare that the daily unit and dollar sales volume of all other products in Region X over the same time period.",
    "description": " The query calculates and compares daily unit and dollar sales volumes for 'Star Technology' products and other products in Region X over the last week. First, it filters sales_data for 'Star Technology' products in Region X from the last week, grouping by date to calculate total order value and units sold. Then, it Filters sales_data for all other products in Region X from the last week, grouping by date to calculate total order value and units sold. Finally, it Joins star_sales and other_sales on sale date, and calculates total and percentage sales volumes for both categories. The result is a table showing daily sales volumes for 'Star Technology' products versus “all other” products in Region X, allowing for performance comparison over the past week.",
    "id": "query#1234567893",
    "sql": "WITH star_sales AS (SELECT EXTRACT(DAY FROM sale_date) AS sale_day, EXTRACT(MONTH FROM sale_date) AS sale_month, EXTRACT(YEAR FROM sale_date) AS sale_year, product_id, SUM(order_value) AS daily_order_value, SUM(units_sold) AS daily_units_sold FROM sales_data WHERE product_category LIKE '%Star Technology%' AND region = 'X' AND sale_date >= CURRENT_DATE - INTERVAL '1 week' GROUP BY EXTRACT(DAY FROM sale_date), EXTRACT(MONTH FROM sale_date), EXTRACT(YEAR FROM sale_date), product_id), other_sales AS (SELECT EXTRACT(DAY FROM sale_date) AS sale_day, EXTRACT(MONTH FROM sale_date) AS sale_month, EXTRACT(YEAR FROM sale_date) AS sale_year, product_id, SUM(order_value) AS daily_order_value, SUM(units_sold) AS daily_units_sold FROM sales_data WHERE product_category NOT LIKE '%Star Technology%' AND region = 'X' AND sale_date >= CURRENT_DATE - INTERVAL '1 week' GROUP BY EXTRACT(DAY FROM sale_date), EXTRACT(MONTH FROM sale_date), EXTRACT(YEAR FROM sale_date), product_id) SELECT s.sale_day, s.sale_month    ",
    "target": "",
    "graph": [],
    "variables": [],
    "observations": "Over the past week in Region X, 'Star Technology' products generated a total revenue of $50,000 and sold 500 units, while all other products achieved $70,000 in revenue with 700 units sold. The top-selling day was Thursday, with 'Star Technology' products accounting for 40% of total sales volume",
    "notes": [
      "Daily Sales Trends: To evaluate comparative sales on a day over day basis. Calculate the average daily revenue and units sold for each product category. For example, the average daily revenue in the last day for 'Star Technology' products was $7,143, and for 'all other' products was $10,000.",
      "Product Performance Comparison: We recommend comparing the average daily revenue and units sold between 'Star Technology' products and 'all other' products to assess performance, but excluding products that were new during the evaluation period. For instance, 'all other' products may have a higher average daily revenue per unit sold compared to 'Star Technology' products due to new product volume, so the comparison could mislead.",
      "Seasonal Variations: Calculate the percentage change in sales volume from the previous week to identify any significant seasonal variations. For example, sales volume increased by 20% compared to the previous week, and we see similar lifts year on year, this potentially indicates a seasonal spike in demand.",
      "Promotional Analysis: Determine the impact of promotions by calculating the percentage increase in sales volume or revenue during the promotional period. For instance, sales volume increased by 30% during the latest promotion, which suggests a successful campaign.",
      "A ratio analysis between all other products and Star Technology products could help uncover customer Preferences. It may be worth reviewing consumer insights trends from the CI_2023 retriever for additional context."
    ],
    "columns": [
      "Date",
      "Star Tech Units Sold",
      "Star Tech Dollar Sales",
      "Other Units Sold",
      "Other Dollar Sales",
      "Total Units Sold",
      "Total Dollar Sales",
      "Star Tech Units %",
      "Star Tech Dollar %"
    ],
    "rows": [
      {
        "Date": "2023-05-15",
        "Star Tech Units Sold": "120",
        "Star Tech Dollar Sales": "$24,000",
        "Other Units Sold": "450",
        "Other Dollar Sales": "$90,000",
        "Total Units Sold": "570",
        "Total Dollar Sales": "$114,000",
        "Star Tech Units %": "21.05%",
        "Star Tech Dollar %": "21.05%"
      },
      {
        "Date": "2023-05-16",
        "Star Tech Units Sold": "110",
        "Star Tech Dollar Sales": "$22,000",
        "Other Units Sold": "480",
        "Other Dollar Sales": "$96,000",
        "Total Units Sold": "590",
        "Total Dollar Sales": "$118,000",
        "Star Tech Units %": "18.64%",
        "Star Tech Dollar %": "18.64%"
      },
      {
        "Date": "2023-05-17",
        "Star Tech Units Sold": "130",
        "Star Tech Dollar Sales": "$26,000",
        "Other Units Sold": "500",
        "Other Dollar Sales": "$100,000",
        "Total Units Sold": "630",
        "Total Dollar Sales": "$126,000",
        "Star Tech Units %": "20.63%",
        "Star Tech Dollar %": "20.63%"
      },
      {
        "Date": "2023-05-18",
        "Star Tech Units Sold": "115",
        "Star Tech Dollar Sales": "$23,000",
        "Other Units Sold": "460",
        "Other Dollar Sales": "$92,000",
        "Total Units Sold": "575",
        "Total Dollar Sales": "$115,000",
        "Star Tech Units %": "20.05%",
        "Star Tech Dollar %": "20.05%"
      }
    ],
    "status": "complete",
    "results": [
      {
        "bytes": 3778,
        "database": "helical-math-378821",
        "duration": 3.0252435207366943,
        "message": "CREATE TABLE (29.0 rows, 3.7 KiB processed)",
        "rows": 29,
        "schema": "shop",
        "table": "loyalty",
        "url": "https://console.cloud.google.com/bigquery?p=helical-math-378821&d=shop&t=loyalty"
      }
    ]
  }
]